[{"title":"Hello World","url":"/2025/10/20/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"重新学习spring boot","url":"/2025/10/20/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0spring-boot/","content":"在大二下的时候系统地学习过一段时间的 Spring Boot 和 Spring Cloud。Spring Boot 跟着完成了一个简单的外卖系统。不过过去时间太长，有些知识点忘了，这几天又重新翻了一下。\n\n一、Spring Boot 的核心思想可以简单理解为一个大 Map：key = string, value = object项目里有很多类，Spring Boot 负责扫描并把它们放进这个容器中。通过注解 @Component、@Controller、@Service 等让框架识别并注册。\n\n二、常用注解\n@Controller：控制层，负责对外暴露接口。  \n\n@Service：业务层，包含具体逻辑。  \n\n@Mapper：数据访问层（MyBatis 提供）。  \n\nController 调用 Service  \nService 调用 Mapper 完成数据库 CRUD。\n\n\n@Autowired：自动注入，Spring 会为你找到匹配的 Bean。  \n\n@Configuration：标记配置类，等价于 XML 配置。  \n\n@Bean：写在配置类的方法上，把返回对象注册为 Bean（常用于引入第三方组件）。\n\n\n\n三、Web 常见注解\n@RestController：@Controller + @ResponseBody，返回 JSON。  \n@RequestMapping：定义路由，可以指定 URL 与请求方法。  \n@GetMapping  \n@PostMapping  \n@PutMapping  \n@DeleteMapping\n\n\n@RequestParam：获取请求参数。  \n@PathVariable：获取 URL 中的路径变量。\n\n\n以上内容算是一次快速复习，后面还会继续深入了解。\n","tags":["-学习记录"]},{"title":"blog使用方法存档","url":"/2025/10/22/blog%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E5%AD%98%E6%A1%A3/","content":"1.blog配置项示例title: 标题date: 自动填入tags: -文本cover: 封面图片链接\n\n\n2.markdown语法示例标题篇~主标题：主标题 ===\n副标题：副标题---\n一级标题： # 一级标题二级标题：## 二级标题三级标题：### 三级标题列表篇~\n有序列表： 1. 第一条\n\n\n无序列表： - 无序表\n\n代码篇~行内代码:  &#96;代码块：&#x2F;&#x2F;&#96;&#96;&#96;\n 多行代码\n &#x2F;&#x2F;&#96;&#96;&#96;\n划线篇~分割线： ---\n\n强调文本~斜体：*粗体 ：**删除线：~~\n块引用~\nlove markdownlove cs\n\n&gt; 内容内容2\n\n链接or图片篇~百度 ：[文本](链接)：![文本](链接)\n表格篇~\n\n\n学号\n姓名\n成绩\n\n\n\n1\na\n93\n\n\n2\nb\n91\n\n\n3\nc\n90\n\n\n","tags":["-教程"]}]